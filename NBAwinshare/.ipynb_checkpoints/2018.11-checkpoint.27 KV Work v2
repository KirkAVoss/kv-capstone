{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from source import seasonalregressor\n",
    "from source import data_wrangle\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "from pandas.plotting import scatter_matrix\n",
    "import numpy as np\n",
    "import seaborn as sb\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.model_selection import train_test_split\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "advanced = data_wrangle.read_all_advanced('./data/advanced')\n",
    "pergame  = data_wrangle.read_all_pergame('./data/per_game')\n",
    "seasonal = data_wrangle.clean_and_join_seasonal_dataframe(advanced, pergame)\n",
    "demographic = data_wrangle.read_demographic_data('./data/player_data.csv')\n",
    "fullstats = data_wrangle.add_years_in_league(seasonal, demographic)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of players:  578  with full season data for seasons: {1, 2, 3, 4, 5}\n",
      "Indices of train set and to-predict set MATCH\n",
      "Using all columns\n",
      "Fitting for year: 5\n",
      "Number of players:  496  with full season data for seasons: {1, 2, 3, 4, 5, 6}\n",
      "Indices of train set and to-predict set MATCH\n",
      "Using all columns\n",
      "Fitting for year: 6\n",
      "Number of players:  421  with full season data for seasons: {1, 2, 3, 4, 5, 6, 7}\n",
      "Indices of train set and to-predict set MATCH\n",
      "Using all columns\n",
      "Fitting for year: 7\n",
      "Number of players:  355  with full season data for seasons: {1, 2, 3, 4, 5, 6, 7, 8}\n",
      "Indices of train set and to-predict set MATCH\n",
      "Using all columns\n",
      "Fitting for year: 8\n",
      "Number of players:  306  with full season data for seasons: {1, 2, 3, 4, 5, 6, 7, 8, 9}\n",
      "Indices of train set and to-predict set MATCH\n",
      "Using all columns\n",
      "Fitting for year: 9\n"
     ]
    }
   ],
   "source": [
    "sr2 = seasonalregressor.SeasonalRegressor()\n",
    "sr2 = sr2.fit(fullstats,demographic)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.6"
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
